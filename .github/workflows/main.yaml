name: Android CI

on:
  push:
  pull_request:
    branches:
      - master
  # release:
  #   types:
  #     - created
  # schedule:
  #   - cron: "0 7 * * 1"

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    - name: Set up JDK 17
      uses: actions/setup-java@v3
      with:
        distribution: 'zulu'
        java-version: '17'
    - name: Set up Android SDK
      uses: android-actions/setup-android@v2
    - name: Download OpenCV
      run: |
        OPENCV_VERSION="4.11.0"
        OPENCV_URL="https://github.com/opencv/opencv/releases/download/${OPENCV_VERSION}/opencv-${OPENCV_VERSION}-android-sdk.zip"
        wget $OPENCV_URL
        unzip opencv-${OPENCV_VERSION}-android-sdk.zip
        mv "$(pwd)/OpenCV-android-sdk/sdk" ./opencv
    - name: Grant execute permission for gradlew
      run: chmod +x ./gradlew
    - name: Cache Gradle
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-
    - name: Build with Gradle
      run: ./gradlew build -x opencv:test -x opencv:lint -x opencv:connectedAndroidTest
    - name: Run Unit Tests
      run: ./gradlew test
    - name: Generate Jacoco Report
      run: ./gradlew jacocoTestReport
    - name: Enable KVM
      run: |
        echo 'KERNEL=="kvm", GROUP="kvm", MODE="0666", OPTIONS+="static_node=kvm"' | sudo tee /etc/udev/rules.d/99-kvm4all.rules
        sudo udevadm control --reload-rules
        sudo udevadm trigger --name-match=kvm
    - name: Run Instrumented Tests
      uses: reactivecircus/android-emulator-runner@v2
      with:
        api-level: 30
        # target: google_apis
        arch: x86_64
        # profile: Nexus 6
        emulator-options: -no-window -gpu swiftshader_indirect -noaudio -no-boot-anim
        script: ./gradlew connectedAndroidTest
    - name: Upload Jacoco Reports
      uses: actions/upload-artifact@v4
      with:
        name: jacoco-reports
        path: app/build/reports/jacoco
    - name: Print Code Coverage Summary
      run: |
        COVERAGE_FILE=$(find app/build/reports/jacoco -name "jacocoTestReport.xml")
        if [ -f "$COVERAGE_FILE" ]; then
          COVERED=$(grep -oP 'covered="\K[0-9]+' $COVERAGE_FILE | awk '{s+=$1} END {print s}')
          MISSED=$(grep -oP 'missed="\K[0-9]+' $COVERAGE_FILE | awk '{s+=$1} END {print s}')
          TOTAL=$((COVERED + MISSED))
          PERCENTAGE=$(echo "scale=2; $COVERED/$TOTAL*100" | bc)
          echo "$COVERED of $TOTAL statements covered ($PERCENTAGE%)"
        else
          echo "Jacoco coverage file not found."
        fi
    - name: Build AAR
      run: ./gradlew assembleRelease
    - name: Check
      run: find app/build -name "*.aar" && ls -lR app/build
    - name: Upload AAR artifact
      uses: actions/upload-artifact@v4
      with:
        name: color-filter-aar
        path: app/build/outputs/aar/*.aar
